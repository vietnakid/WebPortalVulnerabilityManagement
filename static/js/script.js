$(document).ready(function () {
    // Init RegEx
    const REGEX_IP = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/g;
    const REGEX_IP_RANGE = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$/g;
    const REGEX_DOMAIN = /^(?!:\/\/)([a-zA-Z0-9-_]+\.)*[a-zA-Z0-9][a-zA-Z0-9-_]+\.[a-zA-Z]{2,11}?$/igm;
    const TODAY = new Date();

    // New Scan
    $('#btnSubmit').click(function () {
        if (!validateName()) return false;

        if (!validateScanType()) return false;

        if (!validateTarget()) return false;

        if (parseInt($('#scanTime').val()) === 2) {
            var myDate = new Date($('#myDateTimeLocal').val());
            if (myDate < TODAY) {
                $('#noti').text("Cannot input a date from the pass!");
                $('#noti').show();
                return false;
            }
        } else {
            var myDate = TODAY;
        }
        var scanTimeEpoch = parseInt(myDate.getTime() / 1000.0);
        $('#myEpoch').val(scanTimeEpoch);
        $('#createdTimeEpoch').val(parseInt(TODAY.getTime() / 1000.0));

        $('#noti').text("");
        $('#noti').hide();
        $("#scanForm").submit();
    })

    // Validate functions
    function validateName() {
        if ($('#name').val() === "") {
            $('#noti').text("Please input scan Name!");
            $('#noti').show();
            return false;
        } else return true;
    }

    function validateTarget() {
        var targetRaw = $('#target').val();
        if (targetRaw === "") {
            $('#noti').text("Target cannot be empty!");
            $('#noti').show();
            return false;
        } else {
            var targets = [];
            if (!targetRaw.includes(" "))
                targets.push(targetRaw);
            else
                targets = targetRaw.split(" ");

            for (let i = 0; i < targets.length; i++) {
                if (targets[i].match(REGEX_IP) !== null ||
                    targets[i].match(REGEX_IP_RANGE) !== null ||
                    targets[i].match(REGEX_DOMAIN) !== null) continue;
                else {
                    $('#noti').text("Please enter valid IP, IP range or domain separated by space!");
                    $('#noti').show();
                    return false;
                }
            }
            return true;
        }
    }

    function validateScanType() {
        if (parseInt($('#scanTime').val()) === 2 && $('#myDateTimeLocal').val() === "") {
            $('#noti').text("Please enter a time to scan!");
            $('#noti').show();
            return false;
        } else return true;
    }

    $('#sort').change(function () {
        changeValue = parseInt($(this).val());
        index = $(this).index()
        alert(index)
        currentURL = document.location.href;
        sortInitDesc = "init_desc";
        sortInitAsc = "init_asc";

        if (currentURL.includes(sortInitDesc) && changeValue === 1 ||
            !currentURL.includes("sort") && changeValue === 1 ||
            currentURL.includes(sortInitAsc) && changeValue === 2) {
            return;
        } else {
            toBeSort = changeValue === 1 ? sortInitDesc : sortInitAsc;
            url = new URL(currentURL);
            url.searchParams.set('sort', toBeSort);
            window.location.href = url;
            return;
        }
    })

    $('.sorting').click(function () {
        changeValue = $(this).val()
        index = $(this).index()
        order = $(this).attr("value")
        currentURL = document.location.href;
        url = new URL(currentURL);
        url.searchParams.set('sort', order);
        url.searchParams.set('index', index)
        window.location.href = url;
        return;

    })
    // End Validate

    // Check create result
    checkCreate();

    function checkCreate() {
        var createValue = $("#createResult_value").val();
        if (createValue == "") return false;
        else {
            $("#createResult").css("display", "block");
            if (createValue == "1") {
                $("#createResult_text").css("color", "green");
                $("#createResult_text").text("Create scan successfully!")
            } else {
                $("#createResult_text").css("color", "red");
                $("#createResult_text").text("Create scan failed!")
            }
            $("#createResult").fadeOut(5000);
            return true;
        }
    }
    // End Check create result

    $('#scanTime').change(function () {
        var scan = parseInt($('#scanTime').val());
        if (scan === 2) {
            $('#scanTimePicker').css("display", "block");
        } else {
            $('#scanTimePicker').css("display", "none");
        }
    });

    // Collapse navigation bar
    checkCollapseNavigation();

    function checkCollapseNavigation() {
        var module = $("#module_name").val();
        if (module === "nmap" || module === "wappalyzer" || module === "cve" ||
            module == "nse" || module === "acunetix" || module === "nessus" || module === "nikto") {
            $("#collapsePages").collapse('show', true);
            return true;
        } else return false;
    }

    // Pagination

    $('#paging_size').change(function () {
        changeValue = parseInt($(this).val());
        fromPage = 1
        currentURL = document.location.href;

        url = new URL(currentURL);
        url.searchParams.set('size', changeValue);
        url.searchParams.set('page', fromPage);
        window.location.href = url;
        return;
    });

    $(".page-link").on('click', function (event) {
        fromPage = $(this).attr('data-dt-idx');
        currentURL = document.location.href;
        url = new URL(currentURL);
        url.searchParams.set('page', fromPage);
        window.location.href = url;
        return;
    });

    // Delete Modal Popup
    $('#manageScanModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var scanName = button.attr('scanName') // Extract info from data-* attributes
        var scanID = button.attr('root_scanId') // Extract info from data-* attributes
        var action = button.attr('action') // Extract info from data-* attributes
        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        var modal = $(this)
        if (action == "delete") {
            modal.find('.modal-body').text("Are you sure to DELETE \"" + scanName + "\" scan ?")
            modal.find('input').val(scanID)
            modal.find('form').attr("action","/deleteScan");
        }
        else if (action == "stop") {
            modal.find('.modal-body').text("Are you sure to STOP \"" + scanName + "\" scan ?")
            modal.find('input').val(scanID)
            modal.find('form').attr("action","/stopScan");
        }
        else if (action == "start") {
            modal.find('.modal-body').text("Are you sure to START \"" + scanName + "\" scan ?")
            modal.find('input').val(scanID)
            modal.find('form').attr("action","/startScan");
        }
      })
});