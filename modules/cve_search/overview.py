# Import from standard library
import logging
from datetime import datetime

# Import from third-party
from flask import Flask, render_template, json, request, jsonify, session

# Import local files
import DAO.db_connect as db_connect
from config.config import ElasticConfig
from modules.cve_search.process_cve import processCVE, generateBody, generateSortQuery
DEFAULT_SORT = "scanstat.startTime:desc"


def cve_overview():
    try:
        es = db_connect.connect_elasticsearch()
        try:
            # Process sort and body from arguments
            q = request.args.get('q')
            raw_sort = request.args.get('sort')
            paging_from = int(request.args.get('from') or 0)
            paging_size = int(request.args.get('size') or ElasticConfig.DEFAULT_PAGE_SIZE)
            sort_query = DEFAULT_SORT if raw_sort is None else generateSortQuery(
                raw_sort)
            body = generateBody(q, paging_from, paging_size)

            # Process data
            rawData = es.search(index=ElasticConfig.CVESEARCH_INDEX, body=body, sort=sort_query)
            processed_data = json.loads(processCVE(rawData))
            paging_total = processed_data['total']
            paging = {
                "paging_from": paging_from,
                "paging_size": paging_size,
                "paging_total": paging_total
            }
        except:
            logging.exception(msg="Fail")
    except:
        logging.exception(msg="Fail")
    session['module'] = "cve"
    session['overview'] = True
    return render_template('cve.html', response=processed_data, q=q, sorting=sort_query, paging=paging)
