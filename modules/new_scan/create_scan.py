# Import from standard library
import logging, json
# from datetime import datetime

# Import from third-party
from flask import Flask, render_template, request

# Import local files
import DAO.db_connect as db_connect
from config.config import ElasticConfig

def create_scan():
    try:
        es = db_connect.connect_elasticsearch()
        try:
            name = request.form.get('scanName')
            description = request.form.get('scanDescription')
            # 1 -> non-commercial, 2 -> full
            if int(request.form.get('scanType')) == 1:
                scan_type = "non-commercial"
            else: 
                scan_type = "full-scan"

            scan_time_epoch = int(request.form.get('myEpoch'))
            created_time_epoch = int(request.form.get('createdTimeEpoch'))
            scan_interval = int(request.form.get('interval'))
            target = request.form.get('scanTarget')

            body = {
                'name' : name,
                'description' : description,
                'target' : target,
                'next_run_at' : scan_time_epoch,
                'run_interval' : scan_interval,
                'created_date' : created_time_epoch,
                'scanned_time' : 0,
                'scan_type' : scan_type
            }
            # print(json.dumps(body))
            es.index(index=ElasticConfig.SCAN_INDEX, body=body)
        except:
            logging.exception(msg="Process data from form failed!")
    except:
        logging.exception(msg="Connect database failed!")
    return render_template("newscan.html", result=1)
