# Import from standard library
import logging
from datetime import datetime

# Import from third-party
from flask import Flask, render_template, json, request, jsonify, session

# Import local files
import DAO.db_connect as db_connect
from config.config import ElasticConfig
from modules.nmap.process_nmap import processNmap, generateBody, generateSortQuery

DEFAULT_SORT = "scanstat.startTime:desc"

def nmap_overview():
    try:
        es = db_connect.connect_elasticsearch()
        try:
            # Process sort and body from arguments
            q = request.args.get('q')
            raw_sort = request.args.get('sort')
            sort_query = DEFAULT_SORT if raw_sort is None else generateSortQuery(raw_sort)
            body = generateBody(q)

            # Process data
            rawData = es.search(
                index=ElasticConfig.NMAP_INDEX, body=body, 
                size=ElasticConfig.DEFAULT_PAGE_SIZE, sort=sort_query)

            processed_data = json.loads(processNmap(rawData))
            print(processed_data)
        except:
            logging.exception(msg="Fail")
            return render_template('404.html')
    except:
        logging.exception(msg="Fail")
        return render_template('404.html')
    session['module'] = "nmap"
    return render_template('nmap.html', response=processed_data, q=q, sorting=sort_query)