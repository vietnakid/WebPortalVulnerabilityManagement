
import logging
import datetime
import json


def processNmap(rawData):
    try:
        processing_data = rawData['hits']
        result = {}
        result['total'] = processing_data['total']
        result['records'] = []
        for hit in processing_data['hits']:
            result['records'].append(generateSource(hit['_source']))

        return json.dumps(result)

    except:
        logging.exception(msg="No validated jsonified data to be processed!")


def generateSource(raw_source):
    source = {}

    source['target'] = raw_source.get('target')
    source['hostname'] = raw_source.get('hostname')
    source['status'] = "UP" if raw_source.get('status') == "hostUp" else "DOWN"
    source['init_time'] = str(datetime.datetime.utcfromtimestamp(
        int(raw_source['scanstats']['time'])).replace(tzinfo=datetime.timezone.utc))
    source['scan_time'] = raw_source['scanstats']['elapsed']

    # ports in source
    source['openports'] = ","
    ports = []
    for key in raw_source['openports']:
        ports.append(key)

    source['openports'] = ", ".join(ports)
    return source
