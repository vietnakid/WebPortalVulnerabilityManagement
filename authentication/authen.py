import logging
from datetime import datetime

from flask import Flask, render_template, request, session, redirect, url_for
from DAL import user_dal

def check_login():
    try:
        username = request.form['username']
        password = request.form['password']
        if not username or not password:
            return render_template('login.html', error='Username or Password is empty')
        else:
            raw_data = user_dal.get_user_by_username_password(username, password)
            processed_data = processUserData(raw_data)
            if processed_data['total'] != 0:
                session['userid'] = processed_data['userid']
                session['user'] = processed_data['user']
                session['verified'] = False
                if processed_data['user']['firstlogin'] == True:
                    return redirect(url_for('twofactor'))
                elif processed_data['user']['is_disable'] == False:
                    return redirect(url_for('verify_token'))
                else:
                    return render_template('login.html', error='This account has been disable due to many failure on login or verify token')
            else:
                user_dal.increase_number_of_failure(username, 1)
                return render_template('login.html', error='Failed to login')
    except:
        logging.exception(msg="Fail")


def processUserData(rawData):
    result = {}
    try:
        processing_data = rawData['hits']
        # Backward version of elasticSearch compatitive
        if type(processing_data['total']) == dict:
            result['total'] = processing_data['total']['value']
        else:
            result['total'] = processing_data['total']
        
        if result['total'] != 0:
            result['userid'] = processing_data['hits'][0]['_id']
            result['user'] = processing_data['hits'][0]['_source']
    except:
        logging.exception(msg="No validated jsonified data to be processed!")
    return result
