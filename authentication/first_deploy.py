import logging

from DAL import user_dal
from flask import Flask, render_template, request, redirect, url_for
import re

def first_deploy():
    try:
        username = request.form['username']
        password = request.form['password']
        re_password = request.form['re_password']
        fullname = request.form['fullname']
        role = 1
        if not validate_username(username):
            return render_template('first-deploy.html', create_result="Username must longer than 3 character and not contain space")
        elif not validate_password(password):
            check_list = """
Passwords will contain at least 1 upper case letter
Passwords will contain at least 1 lower case letter
Passwords will contain at least 1 number or special character
Passwords will contain at least 8 characters in length"""
            return render_template('first-deploy.html', create_result="Password is not validated" + check_list)
        elif fullname == "":
            return render_template('new-user.html', create_result="Full name can't be blank")
        elif password != re_password:
            return render_template('first-deploy.html', create_result="Repeat password not correct")

        result = user_dal.add_user(username, password, fullname, role)
        if result:
            return render_template('login.html', error="User has been created")
        return render_template('first-deploy.html', create_result="Failed to create user")
    except:
        logging.exception(msg="Fail")

def validate_username(username):
    if " " in username or len(username) < 4:
        return False
    return True

def validate_password(password):
    regex = "(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$"
    if re.match(regex, password):
        return True
    return False