# Import from standard library
import logging
from datetime import datetime

# Import from third-party
from flask import Flask, render_template, json, request, jsonify, session

# Import local files
import DAO.db_connect as db_connect
from config.config import ElasticConfig
from modules.wappalyzer.process_wappalyzer import processWappalyzerDetail


def wappalyzer_detail():
    id = request.args.get('id')
    if id is None:
        return render_template('404.html')
    try:
        es = db_connect.connect_elasticsearch()
        try:
            raw_data = es.get(index=ElasticConfig.WAPPALYZER_INDEX,
                              doc_type="_doc", id=id)
            processed_data = json.loads(processWappalyzerDetail(raw_data))
        except:
            logging.exception(msg="Fail")
            return render_template('404.html')
    except:
        logging.exception(msg="Fail")
        return render_template('404.html')
    session['module'] = "wappalyzer"
    return render_template('wappalyzer-detail.html', response=processed_data)
